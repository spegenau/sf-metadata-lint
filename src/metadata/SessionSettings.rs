use crate::metadata::SessionTimeout::SessionTimeout;
use serde::{Deserialize};

#[derive(Debug, Deserialize)]
pub struct SessionSettings  {
	#[serde(rename = "allowUserAuthenticationByCertificate")]
	pub allow_user_authentication_by_certificate: Option<bool>,
	#[serde(rename = "allowUserCertBasedAuthenticationWithOcspValidation")]
	pub allow_user_cert_based_authentication_with_ocsp_validation: Option<bool>,
	#[serde(rename = "canConfirmEmailChangeInLightningCommunities")]
	pub can_confirm_email_change_in_lightning_communities: Option<bool>,
	#[serde(rename = "canConfirmIdentityBySmsOnly")]
	pub can_confirm_identity_by_sms_only: Option<bool>,
	#[serde(rename = "disableTimeoutWarning")]
	pub disable_timeout_warning: Option<bool>,
	#[serde(rename = "enableBuiltInAuthenticator")]
	pub enable_built_in_authenticator: Option<bool>,
	#[serde(rename = "enableCSPOnEmail")]
	pub enable_csp_on_email: Option<bool>,
	#[serde(rename = "enableCSRFOnGet")]
	pub enable_csrf_on_get: Option<bool>,
	#[serde(rename = "enableCSRFOnPost")]
	pub enable_csrf_on_post: Option<bool>,
	#[serde(rename = "enableCacheAndAutocomplete")]
	pub enable_cache_and_autocomplete: Option<bool>,
	#[serde(rename = "enableClickjackNonsetupSFDC")]
	pub enable_clickjack_nonsetup_sfdc: Option<bool>,
	#[serde(rename = "enableClickjackNonsetupUser")]
	pub enable_clickjack_nonsetup_user: Option<bool>,
	#[serde(rename = "enableClickjackNonsetupUserHeaderless")]
	pub enable_clickjack_nonsetup_user_headerless: Option<bool>,
	#[serde(rename = "enableClickjackSetup")]
	pub enable_clickjack_setup: Option<bool>,
	#[serde(rename = "enableCoepHeader")]
	pub enable_coep_header: Option<bool>,
	#[serde(rename = "enableContentSniffingProtection")]
	pub enable_content_sniffing_protection: Option<bool>,
	#[serde(rename = "enableCoopHeader")]
	pub enable_coop_header: Option<bool>,
	#[serde(rename = "enableLightningLogin")]
	pub enable_lightning_login: Option<bool>,
	#[serde(rename = "enableLightningLoginOnlyWithUserPerm")]
	pub enable_lightning_login_only_with_user_perm: Option<bool>,
	#[serde(rename = "enableMFADirectUILoginOptIn")]
	pub enable_mfa_direct_ui_login_opt_in: Option<bool>,
	#[serde(rename = "enableOauthCorsPolicy")]
	pub enable_oauth_cors_policy: Option<bool>,
	#[serde(rename = "enablePostForSessions")]
	pub enable_post_for_sessions: Option<bool>,
	#[serde(rename = "enableSMSIdentity")]
	pub enable_sms_identity: Option<bool>,
	#[serde(rename = "enableU2F")]
	pub enable_u_2_f: Option<bool>,
	#[serde(rename = "enableUpgradeInsecureRequests")]
	pub enable_upgrade_insecure_requests: Option<bool>,
	#[serde(rename = "enableXssProtection")]
	pub enable_xss_protection: Option<bool>,
	#[serde(rename = "enforceIpRangesEveryRequest")]
	pub enforce_ip_ranges_every_request: Option<bool>,
	#[serde(rename = "enforceUserDeviceRevoked")]
	pub enforce_user_device_revoked: Option<bool>,
	#[serde(rename = "forceLogoutOnSessionTimeout")]
	pub force_logout_on_session_timeout: Option<bool>,
	#[serde(rename = "forceRelogin")]
	pub force_relogin: Option<bool>,
	#[serde(rename = "hasRetainedLoginHints")]
	pub has_retained_login_hints: Option<bool>,
	#[serde(rename = "hasUserSwitching")]
	pub has_user_switching: Option<bool>,
	#[serde(rename = "hstsOnForcecomSites")]
	pub hsts_on_forcecom_sites: Option<bool>,
	#[serde(rename = "identityConfirmationOnEmailChange")]
	pub identity_confirmation_on_email_change: Option<bool>,
	#[serde(rename = "identityConfirmationOnTwoFactorRegistrationEnabled")]
	pub identity_confirmation_on_two_factor_registration_enabled: Option<bool>,
	#[serde(rename = "lockSessionsToDomain")]
	pub lock_sessions_to_domain: Option<bool>,
	#[serde(rename = "lockSessionsToIp")]
	pub lock_sessions_to_ip: Option<bool>,
	#[serde(rename = "lockerServiceAPIVersion")]
	pub locker_service_api_version: Option<String>,
	#[serde(rename = "lockerServiceCSP")]
	pub locker_service_csp: Option<bool>,
	#[serde(rename = "lockerServiceNext")]
	pub locker_service_next: Option<bool>,
	#[serde(rename = "lockerServiceNextControl")]
	pub locker_service_next_control: Option<bool>,
	#[serde(rename = "logoutURL")]
	pub logout_url: Option<String>,
	#[serde(rename = "redirectBlockModeEnabled")]
	pub redirect_block_mode_enabled: Option<bool>,
	#[serde(rename = "redirectionWarning")]
	pub redirection_warning: Option<bool>,
	#[serde(rename = "referrerPolicy")]
	pub referrer_policy: Option<bool>,
	#[serde(rename = "requireHttpOnly")]
	pub require_http_only: Option<bool>,
	#[serde(rename = "requireHttps")]
	pub require_https: Option<bool>,
	#[serde(rename = "sessionTimeout")]
	pub session_timeout: Option<SessionTimeout>,
	#[serde(rename = "sidToken3rdPartyAuraApp")]
	pub sid_token_3_rd_party_aura_app: Option<bool>,
	#[serde(rename = "useLocalStorageForLogoutUrl")]
	pub use_local_storage_for_logout_url: Option<bool>,
}
